plugins
        {
            id "org.springframework.boot" version "2.6.2"
            id "com.jfrog.artifactory" version "4.27.0"    // needed for interacting with artifactory
            id "io.spring.dependency-management" version "1.0.11.RELEASE"
            id "io.freefair.lombok" version "6.3.0"

            id "groovy"        // enables groovy compilation
            id "eclipse"        // sets up the project for import into eclipse IDEs
            id "idea"            // sets up the project for import into intelliJ IDEs
            //id "maven-publish"    // needed for publishing this project's output to artifactory as maven artifacts (i.e. with GAVC addressing)

            id "org.sonarqube" version "2.8"
            id "jacoco"
            id 'java-library'
        }

apply plugin: "jacoco"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 11
targetCompatibility = 11

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results/test"
        property "sonar.exclusions", "generatedsources/**/*, " +
                "src/main/java/com/optum/ds/config/*, " +
                "src/main/java/com/optum/ds/entity/*, " +
                "src/main/java/com/optum/ds/exception/*, " +
                "src/main/java/com/optum/ds/repository/*, " +
                "src/main/java/com/optum/ds/vo/*, " +
                "src/main/java/com/optum/ds/Application.java"
    }
}

repositories
        {
            maven
                    {
                        url "${artifactory_contextUrl}/repo"
                        credentials
                                {
                                    username = "${artifactory_user}"
                                }
                    }
        }

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.0'
    }
}

dependencies {

    implementation 'com.optum.link.edge:link-keystores:latest.release'

    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Cloud Config dependencies
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    implementation('org.apache.logging.log4j:log4j-api')
            {
                version {
                    strictly("2.17.1")
                }
            }

    implementation('org.apache.logging.log4j:log4j-to-slf4j')
            {
                version {
                    strictly("2.17.1")
                }
            }

    //    MongoDB dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.2'
    implementation 'org.mongodb:bson:4.4.0'

    // apache codec library
    implementation(group: 'commons-codec', name: 'commons-codec', version: '1.14')

    //Swagger dependencies
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    //EhCache
    implementation group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.9.2'

    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    //Junit testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.5.RELEASE'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.7'
    testImplementation 'org.projectlombok:lombok:1.18.12'
    //TODO: upgrade tests to junit 5 or higher
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.spockframework:spock-core:2.1-M2-groovy-3.0'
//    testImplementation 'org.spockframework:spock-spring:2.1-M2-groovy-3.0'


    //kafka
    implementation "org.apache.kafka:kafka-clients:3.0.0"
    implementation 'org.springframework.kafka:spring-kafka:2.8.0'

    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.3'
    implementation 'org.modelmapper:modelmapper:2.3.5'

}

task enableDebug {
    bootRun.jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=3541,suspend=n']
}

jacocoTestReport {
    reports {
        csv.required = false
        xml.required = true
        html.required = true
    }
    afterEvaluate { // (optional) : to exclude classes / packages from coverage
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [ ])
        })
    }
}

test {
    testLogging {
        //  exceptionFormat "full"
        events "passed", "skipped", "failed"
        // showStandardStreams true
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}



// for local execution
bootRun {
    // Make sure we can specify the profile with -Dspring.profiles.active=dev
    systemProperties = System.properties


    if (!System.getenv('SPRING_PROFILES_ACTIVE') && !systemProperties['spring.profiles.active']) {
        systemProperty 'spring.profiles.active', 'dev'
    }

//    if (!System.getenv('SPRING_CONFIG_LOCATION') && !systemProperties['spring.config.location']) {
//        systemProperty 'spring.config.additional-location','classpath:config/link-swagger.yml'
//    }
}

test.finalizedBy jacocoTestReport
